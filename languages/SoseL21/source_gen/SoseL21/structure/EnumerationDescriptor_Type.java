package SoseL21.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_Type extends EnumerationDescriptorBase {

  public EnumerationDescriptor_Type() {
    super(0xd37e68cc7f44d7cL, 0x9f193484afb67d84L, 0x57b3245af39ac564L, "Type", "r:08ddafc1-22e7-46a1-bf5d-1345b3a1efff(SoseL21.structure)/6319434675183600996");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_int_0 = new EnumerationDescriptor.MemberDescriptor("int", "int", 0x57b3245af39ac565L, "r:08ddafc1-22e7-46a1-bf5d-1345b3a1efff(SoseL21.structure)/6319434675183600997");
  private final EnumerationDescriptor.MemberDescriptor myMember_boolean_0 = new EnumerationDescriptor.MemberDescriptor("boolean", "boolean", 0x57b3245af39ac566L, "r:08ddafc1-22e7-46a1-bf5d-1345b3a1efff(SoseL21.structure)/6319434675183600998");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xd37e68cc7f44d7cL, 0x9f193484afb67d84L, 0x57b3245af39ac564L, 0x57b3245af39ac565L, 0x57b3245af39ac566L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_int_0, myMember_boolean_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "int":
        return myMember_int_0;
      case "boolean":
        return myMember_boolean_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
